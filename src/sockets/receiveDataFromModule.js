const { putNewLocation } = require('../helper/helper');
const { isStolenSuggestion } = require('../service/suggestionService')
const { pushSocketIdToArray, emitNotifyToArray, removeSocketIdFromArray } = require('../helper/socketHelper');

let receiveDataFromModule = io => {
  io.on('connection', socket => {
    let clients = {};

    console.log(socket.id);
    socket.on('Sent-data-to-server', data => {
      console.log(data);

      putNewLocation(data.hostId, data.gps[0], data.gps[1], data.gps[2]);

      io.sockets.emit('Server-sent-gps-data', {
        lat: data.gps[0],
        lng: data.gps[1],
        speed: data.gps[2]
      });

      // console.log(data.checkThief);

      if (data.checkThief === 1) {
        console.log('THIEF');
        isStolenSuggestion(data.distance, data.gps[2])
        .then(result => {
          console.log('IS STOLEN: ', result);

          if (result === 0) return;

          io.sockets.emit('Server-suggest-is-stolen', {
            status: result
          });
        });
      }
    });

    socket.on('send-data-to-server', data => {
      console.log(data);

      let routes = [
        [
          16.06132,
          108.21694
        ],
        [
          16.06122,
          108.21695
        ],
        [
          16.06086,
          108.21698
        ],
        [
          16.06086,
          108.21698
        ],
        [
          16.06086,
          108.21697
        ],
        [
          16.06086,
          108.21696
        ],
        [
          16.06086,
          108.21695
        ],
        [
          16.06085,
          108.21695
        ],
        [
          16.06085,
          108.21694
        ],
        [
          16.06084,
          108.21693
        ],
        [
          16.06083,
          108.21692
        ],
        [
          16.06082,
          108.21691
        ],
        [
          16.06081,
          108.21691
        ],
        [
          16.06081,
          108.2169
        ],
        [
          16.0608,
          108.2169
        ],
        [
          16.06079,
          108.2169
        ],
        [
          16.06078,
          108.2169
        ],
        [
          16.06078,
          108.21679
        ],
        [
          16.06063,
          108.21578
        ],
        [
          16.06044,
          108.21437
        ],
        [
          16.06043,
          108.21429
        ],
        [
          16.06035,
          108.21366
        ],
        [
          16.06023,
          108.21287
        ],
        [
          16.06017,
          108.21247
        ],
        [
          16.06011,
          108.21208
        ],
        [
          16.06006,
          108.21172
        ],
        [
          16.05997,
          108.21111
        ],
        [
          16.05997,
          108.21111
        ],
        [
          16.06063,
          108.21102
        ],
        [
          16.06082,
          108.21099
        ],
        [
          16.06087,
          108.21098
        ],
        [
          16.06242,
          108.21076
        ],
        [
          16.06296,
          108.21068
        ],
        [
          16.06368,
          108.21058
        ],
        [
          16.06395,
          108.21054
        ],
        [
          16.06444,
          108.21046
        ],
        [
          16.06452,
          108.21046
        ],
        [
          16.0647,
          108.21044
        ],
        [
          16.06487,
          108.21043
        ],
        [
          16.06498,
          108.21043
        ],
        [
          16.06503,
          108.21043
        ],
        [
          16.06521,
          108.21041
        ],
        [
          16.06539,
          108.21039
        ],
        [
          16.06556,
          108.21037
        ],
        [
          16.06574,
          108.21035
        ],
        [
          16.06592,
          108.21033
        ],
        [
          16.06594,
          108.21033
        ],
        [
          16.06656,
          108.21034
        ],
        [
          16.06656,
          108.21034
        ],
        [
          16.06647,
          108.20983
        ],
        [
          16.06643,
          108.20968
        ],
        [
          16.06641,
          108.20963
        ],
        [
          16.06638,
          108.20945
        ],
        [
          16.06631,
          108.20907
        ],
        [
          16.06631,
          108.20903
        ],
        [
          16.06625,
          108.20863
        ],
        [
          16.06624,
          108.20861
        ],
        [
          16.06621,
          108.20825
        ],
        [
          16.06616,
          108.20775
        ],
        [
          16.06615,
          108.20763
        ],
        [
          16.06614,
          108.20727
        ],
        [
          16.06615,
          108.20682
        ],
        [
          16.06615,
          108.20682
        ],
        [
          16.06616,
          108.20683
        ],
        [
          16.06618,
          108.20682
        ],
        [
          16.0662,
          108.20682
        ],
        [
          16.06622,
          108.2068
        ],
        [
          16.06623,
          108.20678
        ],
        [
          16.06623,
          108.20677
        ],
        [
          16.06624,
          108.20676
        ],
        [
          16.06624,
          108.20675
        ],
        [
          16.06623,
          108.20674
        ],
        [
          16.06623,
          108.20673
        ],
        [
          16.06623,
          108.20672
        ],
        [
          16.06622,
          108.20672
        ],
        [
          16.06622,
          108.20671
        ],
        [
          16.06622,
          108.2067
        ],
        [
          16.06621,
          108.2067
        ],
        [
          16.0662,
          108.20669
        ],
        [
          16.06619,
          108.20669
        ],
        [
          16.06618,
          108.20669
        ],
        [
          16.06618,
          108.20668
        ],
        [
          16.06617,
          108.20668
        ],
        [
          16.06616,
          108.20668
        ],
        [
          16.06615,
          108.20669
        ],
        [
          16.06613,
          108.20663
        ],
        [
          16.06609,
          108.20638
        ],
        [
          16.06607,
          108.2062
        ],
        [
          16.06607,
          108.20601
        ],
        [
          16.06606,
          108.20575
        ],
        [
          16.06606,
          108.20571
        ],
        [
          16.06603,
          108.20551
        ],
        [
          16.06607,
          108.20532
        ],
        [
          16.06607,
          108.20526
        ],
        [
          16.06607,
          108.2052
        ],
        [
          16.06605,
          108.20507
        ],
        [
          16.06605,
          108.20507
        ],
        [
          16.06649,
          108.20505
        ],
        [
          16.06667,
          108.20504
        ],
        [
          16.06703,
          108.20501
        ]
      ];
      // io.sockets.emit('Server-sent-gps-data', {
      //   lat: data.gps[0],
      //   lng: data.gps[1]
      // });
      let max = routes.length;
      let i = 0;
      let timer = setInterval(() => {
        io.sockets.emit('Server-sent-gps-data', {
          lat: routes[i][0],
          lng: routes[i][1]
        });
        i++;
        if (i === max) {
          clearInterval(timer);
        }
      }, 3000);

    });
  })
}

module.exports = receiveDataFromModule;
